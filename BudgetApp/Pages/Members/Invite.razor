@page "/members/invite"
@using BudgetApp.Data
@using BudgetApp.Models
@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Identity.UI.Services

@inject ApplicationDbContext Db
@inject AuthenticationStateProvider AuthStateProvider
@inject UserManager<ApplicationUser> UserManager
@inject IEmailSender EmailSender
@inject NavigationManager Nav

<h3>Zaproszenie nowego członka</h3>

<EditForm Model="model" OnValidSubmit="HandleInvite">
  <DataAnnotationsValidator />
  <ValidationSummary />

  <div class="mb-3">
    <label class="form-label">Email</label>
    <InputText @bind-Value="model.Email" class="form-control" />
  </div>

  <button type="submit" class="btn btn-primary">Wyślij zaproszenie</button>
    <button type="button" class="btn btn-secondary ms-2"
            @onclick='() => Nav.NavigateTo("/family")'>
        Anuluj
    </button>


</EditForm>

@code {
  private class InviteModel
  {
    [Required, EmailAddress]
    public string Email { get; set; } = "";
  }

  private InviteModel model = new();
  private int familyId;

  protected override async Task OnInitializedAsync()
  {
    var auth = await AuthStateProvider.GetAuthenticationStateAsync();
    var user = await UserManager.GetUserAsync(auth.User)
               ?? throw new InvalidOperationException("Brak zalogowanego użytkownika");
    familyId = user.FamilyId
               ?? throw new InvalidOperationException("Użytkownik nie należy do rodziny");
  }

  private async Task HandleInvite()
  {
    // 1) Stwórz encję
    var invite = new FamilyInvite {
      FamilyId  = familyId,
      Email     = model.Email
    };
    Db.Invites.Add(invite);
    await Db.SaveChangesAsync();

    // 2) Wyślij maila
    var url = Nav.BaseUri.TrimEnd('/') + $"/members/accept/{invite.Id}";
    await EmailSender.SendEmailAsync(
      model.Email,
      "Zaproszenie do rodziny",
      $"Kliknij <a href=\"{url}\">tutaj</a>, aby dołączyć.");

    Nav.NavigateTo("/members");
  }
}
